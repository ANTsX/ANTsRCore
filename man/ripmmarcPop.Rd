% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ripmmarc.R
\name{ripmmarcPop}
\alias{ripmmarcPop}
\title{RIPMMARC population basis}
\usage{
ripmmarcPop(ilist, mask, patchRadius = 3, patchSamples = 1000,
  patchVarEx = 0.95, meanCenter = TRUE)
}
\arguments{
\item{ilist}{list of antsImages from which to learn basis}

\item{mask}{Binary mask defining regions in which to decompose or a list
of masks corresponding to ilist.}

\item{patchRadius}{Scalar radius defining the patch size.}

\item{patchSamples}{Scalar defining the number of random patches to sample.}

\item{patchVarEx}{Scalar defining the target variance explained.  If this is
greater than one, then it defines the number of eigenvectors.  Otherwise, it
defines the target variance explained.}

\item{meanCenter}{boolean whether we mean center the patches.}
}
\value{
list including the canonical frame, the matrix basis and its
eigenvalues
}
\description{
Patch-based and rotation invariant image decomposition.  This
is similar to patch-based dictionary learning in N-dimensions.  This
implementation is more efficient for building a basis from image populations.
}
\examples{

\dontrun{
pop = getANTsRData( "population" ) # list of example images
popmasks = list( )
for ( i in 1:length( pop ) )
  popmasks[[ i ]] = getMask( pop[[ i ]] )
rp = ripmmarcPop( pop, popmasks, patchRadius=3,
  meanCenter = TRUE, patchSamples=1000 )
nv = 15
rippedTest <- ripmmarc( pop[[3]], popmasks[[3]], patchRadius = 3,
  evecBasis = rp$basisMat[1:nv,], patchVarEx = nv, meanCenter = TRUE,
  canonicalFrame = rp$canonicalFrame, regressProjections = TRUE )
mm = makeImage( popmasks[[3]], rippedTest$evecCoeffs[,1] )
}

}
\seealso{
\code{\link{ripmmarc}}
}
\author{
Kandel BM, Avants BB
}
