% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/which.R, R/zzz_Arith.R, R/zzz_Comparison.R,
%   R/zzz_Logic.R
\docType{methods}
\name{which,antsImage-method}
\alias{which,antsImage-method}
\alias{antsImage-operators}
\alias{Arith,antsImage,antsImage-method}
\alias{+,antsImage,antsImage-method}
\alias{Arith,antsImage,numeric-method}
\alias{-,antsImage,antsImage-method}
\alias{*,antsImage,antsImage-method}
\alias{/,antsImage,antsImage-method}
\alias{^,antsImage,antsImage-method}
\alias{\%\%,antsImage,antsImage-method}
\alias{\%/\%,antsImage,antsImage-method}
\alias{+,antsImage,numeric-method}
\alias{-,antsImage,numeric-method}
\alias{*,antsImage,numeric-method}
\alias{/,antsImage,numeric-method}
\alias{^,antsImage,numeric-method}
\alias{\%\%,antsImage,numeric-method}
\alias{\%/\%,antsImage,numeric-method}
\alias{+,numeric,antsImage-method}
\alias{-,numeric,antsImage-method}
\alias{*,numeric,antsImage-method}
\alias{/,numeric,antsImage-method}
\alias{^,numeric,antsImage-method}
\alias{\%\%,numeric,antsImage-method}
\alias{\%/\%,numeric,antsImage-method}
\alias{Arith,antsImage,missing-method}
\alias{Arith,numeric,antsImage-method}
\alias{Arith,antsImage,logical-method}
\alias{Arith,logical,antsImage-method}
\alias{Arith,antsImage,array-method}
\alias{Arith,array,antsImage-method}
\alias{Arith,list,antsImage-method}
\alias{Arith,antsImage,list-method}
\alias{==,antsImage,antsImage-method}
\alias{==,antsImage,list-method}
\alias{==,antsImage,array-method}
\alias{==,array,antsImage-method}
\alias{==,antsImage,ANY-method}
\alias{==,ANY,antsImage-method}
\alias{>,antsImage,antsImage-method}
\alias{>,antsImage,list-method}
\alias{>,antsImage,array-method}
\alias{>,array,antsImage-method}
\alias{>,antsImage,ANY-method}
\alias{>,ANY,antsImage-method}
\alias{<,antsImage,antsImage-method}
\alias{<,antsImage,list-method}
\alias{<,antsImage,array-method}
\alias{<,array,antsImage-method}
\alias{<,antsImage,ANY-method}
\alias{<,ANY,antsImage-method}
\alias{!=,antsImage,antsImage-method}
\alias{!=,antsImage,list-method}
\alias{!=,antsImage,array-method}
\alias{!=,array,antsImage-method}
\alias{!=,antsImage,ANY-method}
\alias{!=,ANY,antsImage-method}
\alias{<=,antsImage,antsImage-method}
\alias{<=,antsImage,list-method}
\alias{<=,antsImage,array-method}
\alias{<=,array,antsImage-method}
\alias{<=,antsImage,ANY-method}
\alias{<=,ANY,antsImage-method}
\alias{>=,antsImage,antsImage-method}
\alias{>=,antsImage,list-method}
\alias{>=,antsImage,array-method}
\alias{>=,array,antsImage-method}
\alias{>=,antsImage,ANY-method}
\alias{>=,ANY,antsImage-method}
\alias{&,antsImage,antsImage-method}
\alias{Logic,antsImage,antsImage-method}
\alias{|,antsImage,antsImage-method}
\alias{Logic,antsImage,array-method}
\alias{Logic,array,antsImage-method}
\alias{&,antsImage,logical-method}
\alias{Logic,antsImage,logical-method}
\alias{|,antsImage,logical-method}
\alias{Logic,logical,antsImage-method}
\alias{Logic,antsImage,numeric-method}
\alias{Logic,numeric,antsImage-method}
\alias{Logic,antsImage,ANY-method}
\alias{Logic,ANY,antsImage-method}
\alias{Logic,list,antsImage-method}
\alias{Logic,antsImage,list-method}
\title{Operations for antsImage Objects}
\usage{
\S4method{which}{antsImage}(x, arr.ind = FALSE, useNames = TRUE)

\S4method{Arith}{antsImage,antsImage}(e1, e2)

\S4method{+}{antsImage,antsImage}(e1, e2)

\S4method{-}{antsImage,antsImage}(e1, e2)

\S4method{*}{antsImage,antsImage}(e1, e2)

\S4method{/}{antsImage,antsImage}(e1, e2)

\S4method{^}{antsImage,antsImage}(e1, e2)

\S4method{\%\%}{antsImage,antsImage}(e1, e2)

\S4method{\%/\%}{antsImage,antsImage}(e1, e2)

\S4method{Arith}{antsImage,numeric}(e1, e2)

\S4method{+}{antsImage,numeric}(e1, e2)

\S4method{-}{antsImage,numeric}(e1, e2)

\S4method{*}{antsImage,numeric}(e1, e2)

\S4method{/}{antsImage,numeric}(e1, e2)

\S4method{^}{antsImage,numeric}(e1, e2)

\S4method{\%\%}{antsImage,numeric}(e1, e2)

\S4method{\%/\%}{antsImage,numeric}(e1, e2)

\S4method{+}{numeric,antsImage}(e1, e2)

\S4method{-}{numeric,antsImage}(e1, e2)

\S4method{*}{numeric,antsImage}(e1, e2)

\S4method{/}{numeric,antsImage}(e1, e2)

\S4method{^}{numeric,antsImage}(e1, e2)

\S4method{\%\%}{numeric,antsImage}(e1, e2)

\S4method{\%/\%}{numeric,antsImage}(e1, e2)

\S4method{Arith}{antsImage,missing}(e1, e2)

\S4method{Arith}{numeric,antsImage}(e1, e2)

\S4method{Arith}{antsImage,logical}(e1, e2)

\S4method{Arith}{logical,antsImage}(e1, e2)

\S4method{Arith}{antsImage,array}(e1, e2)

\S4method{Arith}{array,antsImage}(e1, e2)

\S4method{Arith}{list,antsImage}(e1, e2)

\S4method{Arith}{antsImage,list}(e1, e2)

\S4method{==}{antsImage,antsImage}(e1, e2)

\S4method{==}{antsImage,list}(e1, e2)

\S4method{==}{antsImage,array}(e1, e2)

\S4method{==}{array,antsImage}(e1, e2)

\S4method{==}{antsImage,ANY}(e1, e2)

\S4method{==}{ANY,antsImage}(e1, e2)

\S4method{>}{antsImage,antsImage}(e1, e2)

\S4method{>}{antsImage,list}(e1, e2)

\S4method{>}{antsImage,array}(e1, e2)

\S4method{>}{array,antsImage}(e1, e2)

\S4method{>}{antsImage,ANY}(e1, e2)

\S4method{>}{ANY,antsImage}(e1, e2)

\S4method{<}{antsImage,antsImage}(e1, e2)

\S4method{<}{antsImage,list}(e1, e2)

\S4method{<}{antsImage,array}(e1, e2)

\S4method{<}{array,antsImage}(e1, e2)

\S4method{<}{antsImage,ANY}(e1, e2)

\S4method{<}{ANY,antsImage}(e1, e2)

\S4method{!=}{antsImage,antsImage}(e1, e2)

\S4method{!=}{antsImage,list}(e1, e2)

\S4method{!=}{antsImage,array}(e1, e2)

\S4method{!=}{array,antsImage}(e1, e2)

\S4method{!=}{antsImage,ANY}(e1, e2)

\S4method{!=}{ANY,antsImage}(e1, e2)

\S4method{<=}{antsImage,antsImage}(e1, e2)

\S4method{<=}{antsImage,list}(e1, e2)

\S4method{<=}{antsImage,array}(e1, e2)

\S4method{<=}{array,antsImage}(e1, e2)

\S4method{<=}{antsImage,ANY}(e1, e2)

\S4method{<=}{ANY,antsImage}(e1, e2)

\S4method{>=}{antsImage,antsImage}(e1, e2)

\S4method{>=}{antsImage,list}(e1, e2)

\S4method{>=}{antsImage,array}(e1, e2)

\S4method{>=}{array,antsImage}(e1, e2)

\S4method{>=}{antsImage,ANY}(e1, e2)

\S4method{>=}{ANY,antsImage}(e1, e2)

\S4method{&}{antsImage,antsImage}(e1, e2)

\S4method{|}{antsImage,antsImage}(e1, e2)

\S4method{Logic}{antsImage,array}(e1, e2)

\S4method{Logic}{array,antsImage}(e1, e2)

\S4method{&}{antsImage,logical}(e1, e2)

\S4method{|}{antsImage,logical}(e1, e2)

\S4method{Logic}{logical,antsImage}(e1, e2)

\S4method{Logic}{antsImage,numeric}(e1, e2)

\S4method{Logic}{numeric,antsImage}(e1, e2)

\S4method{Logic}{antsImage,ANY}(e1, e2)

\S4method{Logic}{ANY,antsImage}(e1, e2)

\S4method{Logic}{list,antsImage}(e1, e2)

\S4method{Logic}{antsImage,list}(e1, e2)
}
\arguments{
\item{x}{a logical vector or array.}

\item{arr.ind}{logical; should array indices be returned when x is an array?}

\item{useNames}{logical indicating if the value of arrayInd() 
should have (non-null) dimnames at all.}

\item{e1}{is an object of class \code{antsImage}.}

\item{e2}{is an object of class \code{antsImage}.}
}
\description{
Overloaded operators for antsImage objects
}
\examples{
img = makeImage(c(10,10),rnorm(100))
mask = img > 0
which(mask)
which(mask, arr.ind = TRUE)
\dontrun{
which(mask + 1)
}

img01 <- as.antsImage(array(1:64, c(4,4,4,1)))
img02 <- as.antsImage(array(64:1, c(4,4,4,1)))
is.antsImage(img01 + img02)
is.antsImage(sqrt(2) * img01)
is.antsImage(img02 / pi)
img01 <- as.antsImage(array(1:64, c(4,4,4,1)))
et = function(x) {
testthat::expect_true(x)
}
x <- is.antsImage(img01 == img01)
et(x)
x <- is.antsImage(img01 == as.array(img01))
et(x)
x <- is.antsImage(img01 == 1)
et(x)
x <- is.antsImage(1 == img01)
et(x)
x <- is.antsImage(as.array(img01) == img01)
et(x)

x <- is.antsImage(img01 >= img01)
et(x)
x <- is.antsImage(img01 >= as.array(img01))
et(x)
x <- is.antsImage(img01 >= 1)
et(x)
x <- is.antsImage(1 >= img01)
et(x)
x <- is.antsImage(as.array(img01) >= img01) 
et(x)

x <- is.antsImage(img01 > img01)
et(x)
x <- is.antsImage(img01 > as.array(img01))
et(x)
x <- is.antsImage(img01 > 1)
et(x)
x <- is.antsImage(1 > img01)
et(x)
x <- is.antsImage(as.array(img01) > img01) 
et(x)

x <- is.antsImage(img01 < img01)
et(x)
x <- is.antsImage(img01 < as.array(img01))
et(x)
x <- is.antsImage(img01 < 1)
et(x)
x <- is.antsImage(1 < img01)
et(x)
x <- is.antsImage(as.array(img01) < img01) 
et(x) 


x <- is.antsImage(img01 <= img01)
et(x)
x <- is.antsImage(img01 <= as.array(img01))
et(x)
x <- is.antsImage(1 <= img01)
et(x) 
x <- is.antsImage(img01 <= 1)
et(x)
x <- is.antsImage(as.array(img01) <= img01)  
et(x)

x <- is.antsImage(img01 != img01)
et(x)
x <- is.antsImage(img01 != as.array(img01))
et(x)
x <- is.antsImage(1 != img01)
et(x)  
x <- is.antsImage(img01 != 1)
et(x)
x <- is.antsImage(as.array(img01) != img01) 
et(x)

img01 <- as.antsImage(array(1:64, c(4,4,4,1)))
testthat::expect_error(img01 == list())  
img01 <- as.antsImage(array(1:64, c(4,4,4,1)))
testthat::expect_error(img01 > list())  
img01 <- as.antsImage(array(1:64, c(4,4,4,1)))
testthat::expect_error(img01 < list())   
img01 <- as.antsImage(array(1:64, c(4,4,4,1)))
testthat::expect_error(img01 != list())  
img01 <- as.antsImage(array(1:64, c(4,4,4,1)))
testthat::expect_error(img01 <= list())  
img01 <- as.antsImage(array(1:64, c(4,4,4,1)))
testthat::expect_error(img01 >= list())  
img01 <- as.antsImage(array(1:64, c(4,4,4,1)))
mask1 = img01 == 1
mask2 = img01 == 2
testthat::expect_true(is.antsImage(mask1))
testthat::expect_true(is.antsImage(mask2))
testthat::expect_true(is.antsImage(mask1 & mask2))
testthat::expect_true(is.antsImage(mask1 | mask2))
testthat::expect_true(is.antsImage(as.array(mask2) | mask1))
testthat::expect_true(is.antsImage(as.array(mask2) & mask1))
testthat::expect_true(is.antsImage(mask2 | as.array(mask1)))
testthat::expect_true(is.antsImage(mask2 & as.array(mask1)))

testthat::expect_true(is.antsImage(mask2 | 1))
testthat::expect_true(is.antsImage(mask2 | TRUE))
testthat::expect_true(is.antsImage(mask2 & 1))
testthat::expect_true(is.antsImage(mask2 & TRUE)) 
}
\author{
John Muschellli \email{muschellij2@gmail.com}
}
