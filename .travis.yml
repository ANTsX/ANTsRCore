# ANTsRCore Build
language: r
sudo: false
cache:
  - timeout: 1000  
  - packages
warnings_are_errors: true
bioc_required: false
cran: http://cran.rstudio.com

os:
  - linux
  - osx

r:
  - oldrel  
  - release
  - devel

matrix: 
  allow_failures:
    - r: devel
    - os: osx
    
latex: false
compiler: clang
osx_image: xcode9

env:
  global:
  - R_BUILD_ARGS=" --no-build-vignettes --no-manual "
  - R_CHECK_ARGS=" --timings --as-cran --no-manual  --install-args=--build"
  - R_CHECK_TIME="TRUE"
  - R_CHECK_TESTS="TRUE"
  - _R_CHECK_TIMINGS_="0"
  - _R_CHECK_FORCE_SUGGESTS_="0"
  - BOOTSTRAP_LATEX=1

before_install:
  - ulimit -n 2048  
  - export LD_LIBRARY_PATH=/usr/local/clang/lib:${LD_LIBRARY_PATH}
  - export PROJ_DIR=`basename ${TRAVIS_BUILD_DIR}`
  - export ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS=1
  - fname=travis_helpers.sh
  - wget -O ${fname} http://bit.ly/travis_helpers
  - cat ${fname}; source ${fname}; rm ${fname}
  - export gh_user=`get_gh_user` ; echo $gh_user ;  
  - export rver=`r_version`;
  - cat DESCRIPTION  
  - export PACKAGE_NAME=`package_name`
  - export RCHECK_DIR=${PACKAGE_NAME}.Rcheck    
  # does all the clang exports
  - x=`export_clang_cxx`; eval ${x}
  - if [ "$TRAVIS_OS_NAME" = "osx" ];
    then
      no_open_mp ; 
    fi    
  - echo "CC=${CC}, CXX=${CXX}, CXX1X=${CXX1X}"
  - echo "CXX1XSTD=${CXX1XSTD}, CXX11=${CXX11}"
  - clang_cxx
  - export cmake_version="3.11"
  - cmake --version
  - x=`cmake_setup`; echo "${x}"; eval ${x};
  - cmake --version
  - ./cleanup
  - Rscript -e "install.packages('Rcpp', type = 'source', repos=c(CRAN='https://cran.rstudio.com'))"  
  - gh_binary_install stnava/ITKR
  - export ants_user=ANTsX
  - install_missing_remote_deps ${ants_user}/ANTsRCore
  - echo "Done Installing Missing Deps"
  - cat DESCRIPTION
  - install_remotes_no_dep
  - cat DESCRIPTION
  - echo $PATH ;
  - install_deps_all

script:
  - x=`export_clang_cxx`; eval ${x}
  - travis_wait 100 R CMD build ${R_BUILD_ARGS} .
  - rm -f travis_wait*.log
  - PKG_TARBALL=$(ls -1t *.tar.gz | head -n 1)  
  - ls
  - travis_wait 100 R CMD check ${R_CHECK_ARGS} "${PKG_TARBALL}"; CHECK_RET=$? ;
  - rm -f travis_wait*.log
  - if [[ $CHECK_RET -ne 0 ]];
    then
      echo "R CMD check failed"; 
      check_fail; 
      dump_logs; 
      check_warnings ;      
      travis_terminate 1;
    fi

after_failure:
  - dump_logs

after_success:
  - dump_logs
  - ls
  - PKG_FILE_NAME=$(ls -1t *.tar.gz | head -n 1);
  - PKG_TARBALL_WITH_R=`echo $PKG_FILE_NAME | sed 's/.tar.gz/_'"R${rver}"'.tar.gz/'` ;
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      PKG_FILE_NAME=$(ls -1t *.tgz | head -n  1);
      PKG_TARBALL_WITH_R=`echo $PKG_FILE_NAME | sed 's/.tgz/_'"R${rver}"'.tgz/'` ;
    fi
  - mv ${PKG_FILE_NAME} ${PKG_TARBALL_WITH_R} ;      
  - PKG_FILE_NAME=${PKG_TARBALL_WITH_R}  
  - if [[ "${gh_user}" == "ANTsX" || "${gh_user}" == "stnava" ]]; 
    then 
      export secure_key=Hm3kbkCySSneOe8644MWudbNAphB4+YDpGhWCeeHuSiHoQU6+Qmx/f014iVM5JqZI72EGX21hSygqfD9jB8O78J4imO4xMUnNciA80pV/NlUnzwMiYVfpYAga3QQApvSJZuBA/4+kJXlFZkigWGXuzb8W5Qty0xY1KV9FuaUzo5bRxCPa4f3t3PP/Ikjhla2vH53UHo+YiRIfGlH5Rn3p2kDS5390cfdO5+1kn8p5UMZV7C1B2VAE2OO0QxtVmjZbpAxE/k+QGdeGMXBfu5bCfERO3Wr/sfITaTu9j5Oulv/fDfVe6kuIRhAkX0eUn+CEkEhBgSO6yp1+abcagxIRVYfF3hp5e6+cOeGC/QH0z9kSsCim3SdYvz+rFhtzS+vO4LTO8wgGzyMLalvH2Jopf4OrRbSwbmiLpQzR/fFrmx9IZt0o4lD9+KW9Nhj0o9+V6NHg+Usx1wbTVYDjh53op6AT5c6E4Zej0gLeG9gXXtICtcEE1pCLiK8EX11cCUpgRD0NcG+F/dcPY5kLtf4/Uw/krhwz8OagPk9Mt3aleu0iepkuwQoGNoy2XBzc0zcaGICC3Y23KW/VZRc0xZGjiUmQXyMlbuB/dOYr0V8VGVPanRgDksr+ML0B4nqdfbtqTC1FQl2ORtG7iCDuArAZo7bokisZ2GTSA2F85BpfRY= ;
    elif [[ "${gh_user}" == "muschellij2" ]]; then 
      export secure_key=S6aYhOkDea+5abwE3x035WAW+LFgJnvPCwDTxILryNaifdtd/WoQvdW9RB39ZokDVMiXkxyyT1aXZFksUO2hDyxtkOTLdesNj9IKbd0Lea/L67mJI8yvrRUYzKSAEE5n6/4QsMUs9RIxzi32S0i8UlH0UAG8+QPwTfYWUMiSXVJPUIi4gcwQ3xRUyQ5/Ixs0ZizpcuKHgW7uoa0ZqeoPz1aFCEniIvfeDYcdp3oHRsCuAvqPhrBKuioyAyWGH4BvNF7poON6gYBP3bGKWpG/Z21263OrBaH14uItFdBdMuencZ1357nudrraITw1RLNMIeIzJ7Zf7G5RI/3BHPieg193eQGQGlwKT43jsPt6CHyq26qcgI9I4R+m7y8bjefL5H1Xd8Czt5sLw0Csdg2VBZ3OkGvI6WSk448kp89bpBoPrdtwkWBvf643pMdIz3ynxl1+Dc/RO3M2IvMSQIcmqkLDU6NpKcMUARmbcNR77xylsw1QWw/ndl3QtjS3upbUTeq6olhlW245+/soVDpgnIfW/betpJa6UPeWtAs3P8RnY1eJtrKNJCHm9sQDUM8+WuSkgJOApAVEnn4jdsClkWEXciT1wv7xzsOzs5gIXK4fNAN8crTJdYFdtjOZbPlEfPGGF61l+ty8hdsgT2cnQ9owNFRYj/ehTrcPK0ZrgJs= ;
    fi

notifications:
  email:
    recipients:
    - stnava@gmail.com
    on_success: change
    on_failure: always

# so no overwrite of linux build
before_deploy:
  - if [ "$TRAVIS_OS_NAME" = "osx" ];
    then
      rm -f *.tar.gz;
    fi

deploy:
  provider: releases
  api_key:
    secure: ${secure_key}
  file: ${PKG_FILE_NAME}
  skip_cleanup: true
  on:
    tags: true
    repo: ${gh_user}/${PROJ_DIR}
    all_branches: true



