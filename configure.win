#!/bin/bash -xv
CMAKE_C_FLAGS="-O3"
CMAKE_CXX_FLAGS="-O3"
CMAKE_EXE_LINKER_FLAGS="-Wl,--allow-multiple-definition -Wl,--enable-auto-import -Wl,--enable-runtime-pseudo-reloc, -Wl,--verbose"
# DLLFLAGS="${DLLFLAGS} -Wl,--allow-multiple-definition -Wl,--enable-auto-import -Wl,--enable-runtime-pseudo-reloc, -Wl,--verbose"
DLLFLAGS="${DLLFLAGS} ${CMAKE_EXE_LINKER_FLAGS}"
# PKG_CPPFLAGS="${PKG_CPPFLAGS} -Wl,--allow-multiple-definition,--enable-auto-import,--enable-runtime-pseudo-reloc,--verbose"
PKG_CPPFLAGS="${PKG_CPPFLAGS} ${CMAKE_EXE_LINKER_FLAGS}"

CXX_STD=CXX11
ITKRCMAKE=`${R_HOME}/bin/Rscript.exe -e 'a<-ITKR::itkIncludes(); cat(a)'`
ITKRLIB=`${R_HOME}/bin/Rscript.exe -e 'a<-ITKR::itkLibs(); cat(a)'`
compflags=`${R_HOME}/bin/Rscript.exe -e 'a<-ITKR:::itkCompileFlags(); cat(a)'`
ITKDIR=`${R_HOME}/bin/Rscript.exe -e 'a<-ITKR::itkDir(); cat(a)'`

CMAKE_BUILD_TYPE=Release
cd ./src
PWD=`pwd`
# platform-specific Makevars
echo "PWD=${PWD}" > Makevars.win
echo "myantssource=\${PWD}/ants" >> Makevars.win
echo "ITK=\"${ITKRCMAKE}\"" >> Makevars.win

needVCL_CAN_STATIC_CONST_INIT_FLOAT=0
echo $OSTYPE $needVCL_CAN_STATIC_CONST_INIT_FLOAT
echo "PKG_CPPFLAGS =${PKG_CPPFLAGS} -Wa,-mbig-obj -I\${ITK} -I\${PWD} -I\${myantssource}/Examples/include/ \
  -I\${myantssource}/Utilities -I\${myantssource}/Examples/ -I../inst/include/\
  -I\${myantssource}/Tensor/ " >> Makevars.win

echo "CXX_STD=CXX11" >> Makevars.win
# echo "SHLIB_CXXLD=-Wl,--allow-multiple-definition,--enable-auto-import,--enable-runtime-pseudo-reloc,--verbose" >> Makevars.win
echo "SHLIB_CXXLD=${CMAKE_EXE_LINKER_FLAGS}"

# echo "myantslib=\"\${PWD}/antb/lib/\"" >> Makevars.win
echo "myantslib=\"./antb/lib/\"" >> Makevars.win

echo "libants=\`find \"\${myantslib}\" -name \"lib*.a\"\`" >> Makevars.win

echo "libitk=\`find \"${ITKRLIB}\" -name \"lib*.a\"\`" >> Makevars.win

echo "PKG_LIBS=${PKG_LIBS} \${libants} \${libitk} \${libants} \${libitk}" >> Makevars.win

# echo "PKG_LIBS=\${libitk} \${libants} \${libitk} \${libants} \${libitk} \
#                  \${libants} \${libitk} \${libants} \${itklib} \${libants} \
#                  \${libitk} \${libants} \${itklib} \${libants} \${itklib} \
#                  \${libants} \${libitk} \${libants} \${itklib}" >> Makevars.win

echo ".PHONY: all libs" >> Makevars.win

echo "all: \$(SHLIB)" >> Makevars.win

echo "\$(SHLIB): libs" >> Makevars.win
# MAKER=c:/Rtools/mingw_64/bin/mingw32-make.exe
MAKER=mingw32-make
echo "libs: ; cd antb && ${MAKER} ${PKG_CPPFLAGS} && cd ANTS-build && ${MAKER} all install" >> Makevars.win

# get / set up ANTs code
# antsgit=https://github.com/ANTsX/ANTs.git
# antstag=e1893f746f7126331a4c31f917538f914c175dfa # wrong parser call
antsgit=https://github.com/muschellij2/ANTs.git
antstag=aa95aab8d546ad5a6f3c1d5922abf03c504ea1bc # muschellij2 tag
antsrtag=`git log --pretty=format:'%H' -n 1`
git clone $antsbranch $antsgit ants
mkdir -p ../data

echo "Dependency;GitTag" > ../data/antsVersions.csv
echo "ANTs;${antstag}" >> ../data/antsVersions.csv
echo "ANTsRCore;${antsrtag}" >> ../data/antsVersions.csv
cd ants
git checkout master;
git pull;
git checkout $antstag
cd ../
mkdir antb
cp ../inst/include/antscore.h ./ants/Examples/include/ants.h
cp -r ants/Examples/include/* ../inst/include/
cp -r ants/Utilities/* ../inst/include/
cp -r ants/Examples/*  ../inst/include/
cp -r ants/Tensor/*  ../inst/include/
cp -r ants/ImageRegistration/* ../inst/include/
cp -r ants/ImageSegmentation/* ../inst/include/
cp -r ants/Temporary/* ../inst/include
cd ./antb

cmaker=`${R_HOME}/bin/Rscript.exe -e "x=Sys.which('cmake'); cat(x)"`
if [ -z "${cmaker}" ]; then
    res=`${R_HOME}/bin/Rscript.exe -e "cat(('cmaker' %in% installed.packages())*1)"`
    if [ $res -eq 0 ];
    then
        git clone https://github.com/stnava/cmaker
        R CMD INSTALL cmaker
        rm -rf cmaker
    fi
    cmaker=`${R_HOME}/bin/Rscript.exe -e "x=cmaker::cmake();"`
    # cmake_path=`dirname cmaker`
    # export PATH=${PATH}:${cmake_path}
    # cmaker="cmake"
else
    cmaker="cmake.exe"
fi

echo ${cmaker}

${cmaker} \
    -G "MinGW Makefiles" \
    -DITK_DIR:PATH="${ITKDIR}" \
    -DCMAKE_SH:BOOL=OFF \
    -DCMAKE_C_FLAGS="${CMAKE_C_FLAGS} ${CMAKE_EXE_LINKER_FLAGS} ${compflags} -DNDEBUG  "\
    -DCMAKE_CXX_FLAGS="${CMAKE_CXX_FLAGS} ${compflags} -DNDEBUG  "\
    -DBUILD_SHARED_LIBS=OFF \
    -DBUILD_ALL_ANTS_APPS=OFF \
    -DUSE_SYSTEM_ITK=OFF \
    -DBUILD_TESTING=OFF \
    -DCOPY_SCRIPT_FILES_TO_BIN_DIR=OFF \
    -DCMAKE_INSTALL_PREFIX:PATH="${R_PACKAGE_DIR}/libs/" \
    -DCMAKE_WINDOWS_EXPORT_ALL_SYMBOLS=TRUE \
    -DWINDOWS_BUILD=1 \
    -DCMAKE_BUILD_TYPE:STRING="${CMAKE_BUILD_TYPE}" \
    -DVNL_CONFIG_ENABLE_SSE2_ROUNDING:BOOL=OFF \
    -DVNL_CONFIG_ENABLE_SSE2:BOOL=OFF \
    -DITK_COMPILER_SUPPORTS_SSE2_64:BOOL=OFF \
    ../ants
cd ../
# needed for warning
rm -rf ants/.git
